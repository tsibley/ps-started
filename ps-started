#!/usr/bin/env perl
use strict;
use warnings;
use FindBin qw< $Script >;

sub clock_ticks {
    return `getconf CLK_TCK`;
}

sub proc_stat {
    my $pid = shift;
    open my $stat, '<', "/proc/$pid/stat"
        or die "can't open /proc/$pid/stat: $!\n";
    return split ' ', <$stat>;
}

sub sys_stat {
    my %data;
    open my $stat, '<', "/proc/stat"
        or die "can't open /proc/stat: $!\n";
    while (<$stat>) {
        my ($label, $values) = split ' ', $_, 2;
        $values = [ split ' ', $values ];
        $data{$label} = $values;
    }
    return \%data;
}

use Getopt::Long;
my %opt;
GetOptions(\%opt, 'age', 'localtime');

my $pid = shift
    or die <<"";
usage: $Script pid                  # start time in seconds since the epoch
       $Script --localtime pid      # local timestamp of start time
       $Script --age pid            # age in seconds

die "pid must be numeric\n"
    if $pid =~ /[^0-9]/;

die "only one of --age or --localtime supported\n"
    if $opt{'age'} and $opt{'localtime'};

my $since_boot = int((proc_stat($pid))[21] / clock_ticks());
my $booted     = sys_stat->{btime}[0];
my $started    = $booted + $since_boot;

if ($opt{'age'}) {
    print time - $started, "\n";
} elsif ($opt{'localtime'}) {
    print scalar localtime($started), "\n";
} else {
    printf "%d\n", $started;
}
